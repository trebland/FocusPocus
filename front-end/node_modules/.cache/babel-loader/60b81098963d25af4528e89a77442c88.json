{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/halor/Desktop/Focus Pocus Web App/focus-pocus/src/Login.js\";\nimport React, { Component } from 'react';\nimport 'whatwg-fetch';\nimport './css/stylesheet.css';\nimport ReactDOM from 'react-dom';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.state = {\n      isLoading: true,\n      token: 0,\n      username: '',\n      password: '',\n      email: '',\n      fullName: '',\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  login() {}\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          token = _this$state.token,\n          userID = _this$state.userID,\n          password = _this$state.password,\n          email = _this$state.email,\n          fullName = _this$state.fullName,\n          message = _this$state.message;\n\n    if (isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n\n    if (!token) {\n      return React.createElement(\"div\", {\n        class: \"loginBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.login(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: (event, newValue) => this.setState({\n          username: newValue\n        }),\n        value: this.state.username,\n        type: \"username\",\n        placeholder: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: (event, newValue) => this.setState({\n          username: newValue\n        }),\n        value: this.state.password,\n        type: \"password\",\n        placeholder: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        class: \"loginButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Sign In\")))));\n    }\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/mnt/c/Users/halor/Desktop/Focus Pocus Web App/focus-pocus/src/Login.js"],"names":["React","Component","ReactDOM","Route","Link","BrowserRouter","Router","Login","constructor","props","onChange","e","setState","target","id","value","state","isLoading","token","username","password","email","fullName","message","componentDidMount","login","render","userID","event","newValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'whatwg-fetch';\nimport './css/stylesheet.css';\nimport ReactDOM from 'react-dom'\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      token: 0,\n      username: '',\n      password: '',\n      email: '',\n      fullName: '',\n      message: ''\n    };\n\n    \n  }\n\n  componentDidMount() {\n      this.setState({\n        isLoading: false,\n      });\n  }\n\n  login() {\n\n\n  \t\n\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n\n  render() {\n    const {\n      isLoading,\n      token,\n      userID,\n      password,\n      email,\n      fullName,\n      message\n    } = this.state;\n\n    if (isLoading) {\n      return (<div><p>Loading...</p></div>);\n    }\n\n    if (!token) {\n      return (\n        <div class=\"loginBox\">\n        \t<h1>Sign In</h1>\n          <br/>\n          <form onSubmit={this.login()}>\n          <div>\n            <input\n              onChange={(event,newValue) => this.setState({username:newValue})}\n              value={this.state.username}\n              type=\"username\"\n              placeholder=\"username\"\n            />\n            <br />\n            <input\n              onChange={(event,newValue) => this.setState({username:newValue})}\n              value={this.state.password}\n              type=\"password\"\n              placeholder=\"password\"\n            />\n            <br />\n            <button type=\"submit\" class=\"loginButton\"><span>Sign In</span></button>\n          </div>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}